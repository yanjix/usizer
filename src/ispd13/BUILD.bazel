load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library")

package(
    default_visibility = ["//visibility:public"],
    features = ["header_modules"],
)

cc_library(
    name = "parser_helper",
    srcs = ["parser_helper.cpp"],
    hdrs = ["parser_helper.h"],
)

cc_library(
    name = "timer_interface",
    srcs = ["timer_interface.cpp"],
    hdrs = ["timer_interface.h"],
)

cc_library(
    name = "stop_watch",
    hdrs = ["Stopwatch.h"],
)

cc_library(
    name = "fmath",
    hdrs = ["fmath.hpp"],
)

cc_library(
    name = "newton_raphson",
    srcs = ["NewtonRaphson.cpp"],
    hdrs = ["NewtonRaphson.h"],
)

cc_library(
    name = "practical_socket",
    srcs = ["PracticalSocket.cpp"],
    hdrs = ["PracticalSocket.h"],
)

cc_library(
    name = "circuit",
    srcs = [
        "Circuit.cpp",
        "Vcell.cpp",
        "global.cpp",
    ],
    hdrs = [
        "Circuit.h",
        "EdgeArray.h",
        "RCTree.h",
        "Vcell.h",
        "global.h",
    ],
    deps = [
        ":fmath",
        ":newton_raphson",
        ":parser_helper",
        ":stop_watch",
        ":timer_interface",
    ],
)

cc_binary(
    name = "main",
    srcs = [
        "main.cpp",
        "main.h",
    ],
    deps = [
        ":circuit",
        ":parser_helper",
        ":stop_watch",
    ],
)
